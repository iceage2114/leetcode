def snakesAndLadders(board):
    length = len(board)
    board.reverse()

    def convert(square):
        row = (square - 1) // length
        col = (square - 1) % length
        if row % 2:
            col = length - 1 - col
        return [row, col]
    
    queue = []
    queue.append([1,0])
    visited = set()

    while queue:
        pop = queue.pop(0)
        square = pop[0]
        moves = pop[1]

        for i in range(1, 7):
            nextSquare = square + i
            converted = convert(nextSquare)
            row = converted[0]
            col = converted[1]

            if board[row][col] != -1:
                nextSquare = board[row][col]

            if nextSquare == length * length:
                return moves + 1
            if nextSquare not in visited:
                visited.add(nextSquare)
                queue.append([nextSquare, moves + 1])
    return -1

board = [[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,35,-1,-1,13,-1],[-1,-1,-1,-1,-1,-1],[-1,15,-1,-1,-1,-1]]
print(snakesAndLadders(board))
    
