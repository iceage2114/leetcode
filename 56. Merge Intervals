def merge(intervals):
    if intervals == [] or intervals == [[]]:
        return []
        
    toReturn = []
    sort(intervals, 0, len(intervals))

    start = intervals[0][0]
    end = intervals[0][1]

    for i in range(1, len(intervals)):
        if intervals[i][0] == start:
            if intervals[i][1] > end:
                end = intervals[i][1]
        else:
            if intervals[i][0] > end:
                toReturn.append([start, end])
                start = intervals[i][0]
                end = intervals[i][1]
            elif intervals[i][1] > end:
                end = intervals[i][1]

    toReturn.append([start, end])
    
    return toReturn

def sort(intervals, start, end):
    if start >= end:
        return

    pivotIndex = start
    pivot = intervals[start]

    for i in range(start + 1, end):
        if intervals[i][0] > pivot[0]:
            continue
        else:
            pivotIndex += 1
            swap(intervals, pivotIndex, i)
    swap(intervals, pivotIndex, start)

    sort(intervals, start, pivotIndex)
    sort(intervals, pivotIndex + 1, end)

def swap(array, start, end):
    temp = array[start]
    array[start] = array[end]
    array[end] = temp
    
intervals = [[1,2],[2,6],[15,18],[8,10], [0,9]]
#           [[1,6],[8,10],[15,18]]
print(merge(intervals))

intervals = [[1,4],[5,6]]
print(merge(intervals))
