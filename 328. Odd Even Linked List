class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
        
def oddEvenList(head):
    if not head or not head.next:
        return head
    
    last = head
    while last.next:
        last = last.next
    
    end = last
    
    prev = head
    current = head.next
    
    while current and current != end:
        next_node = current.next
        
        last = moveToEnd(prev, current, last)
        
        current = next_node
        if current and current != end:
            prev = current
            current = current.next
    
    if current == end and prev.next == end:
        count = 0
        temp = head
        while temp != end:
            count += 1
            temp = temp.next
        
        if count % 2 == 1:
            moveToEnd(prev, current, last)
    
    return head

def moveToEnd(prev, current, last):
    temp = current
    
    prev.next = current.next
    
    last.next = temp
    temp.next = None
    
    return temp


def oddEvenList2(head):
    if not head or not head.next:
        return head
    
    odd = head
    even = head.next
    evenHead = even
    
    while even and even.next:
        odd.next = even.next
        odd = odd.next
        even.next = even.next.next
        even = even.next

    odd.next = evenHead
    return head
    

def printList(head):
    result = []
    while head:
        result.append(head.val)
        head = head.next
    return result

node1 = ListNode(1)
node2 = ListNode(2)
node3 = ListNode(3)
node4 = ListNode(4)
node5 = ListNode(5)
node1.next = node2
node2.next = node3
node3.next = node4
node4.next = node5

result = oddEvenList2(node1)
print(printList(result))
