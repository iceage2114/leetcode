def maxScore(nums1, nums2, k):
    nums = []
    for i in range(len(nums2)):
        nums.append((nums2[i], nums1[i]))
    nums = sorted(nums, reverse=True)
  
    minHeap = []
    current = 0
    toReturn = 0
  
    for num2, num1 in nums:
        current += num1
        minHeap.append(num1)
        minHeap.sort()
      
        if len(minHeap) == k:
            toReturn = max(toReturn, current * num2)
            current -= minHeap.pop(0)
          
    return toReturn

from heapq import heappush, heappop

def maxScore2(nums1, nums2, k):
    nums = []
    for i in range(len(nums2)):
        nums.append((nums2[i], nums1[i]))
    nums = sorted(nums, reverse=True)
  
    minHeap = []
    current = 0
    toReturn = 0
  
    for num2, num1 in nums:
        current += num1
        heappush(minHeap, num1)
      
        if len(minHeap) == k:
            toReturn = max(toReturn, current * num2)
            current -= heappop(minHeap)
          
    return toReturn

nums1 = [1,3,3,2]
nums2 = [2,1,3,4]
k = 3
print(maxScore(nums1, nums2, k))

nums1 = [4,2,3,1,1]
nums2 = [7,5,10,9,6]
k = 1
print(maxScore(nums1, nums2, k))
