def minReorder(n, connections):
    edges = set()
    for i in range(len(connections)):
        edges.add((connections[i][0], connections[i][1]))
        
    neighbours = [[] for i in range(n)]
    visited = set()

    for i in range(len(connections)):
        a = connections[i][0]
        b = connections[i][1]
        print(connections[i])

        neighbours[a].append(b)
        neighbours[b].append(a)
        print(neighbours[a], neighbours[b])

    print(neighbours)

    print()
    def dfs(city):
        count = 0
        for neighbor in neighbours[city]:
            print("neighbor: ", neighbor)
            if neighbor in visited:
                print("visited")
                continue
            print((neighbor, city))
            if (neighbor, city) not in edges:
                count += 1
            visited.add(neighbor)
            count += dfs(neighbor)
            
        return count

    visited.add(0)
    count = dfs(0)
    return count


n = 6
connections = [[0,1],[1,3],[2,3]]
print(minReorder(n, connections))
